From a60b279e0b3fe1d3e1d694b0e66d0a41b9fd4c20 Mon Sep 17 00:00:00 2001
From: "H. Vetinari" <h.vetinari@gmx.com>
Date: Mon, 16 Oct 2023 11:34:34 +1100
Subject: [PATCH 4/4] Revert "Skip tests that require FreeType if FreeType is
 not available"

This reverts commit 472eb666833f97e5d44364a1e80dec355623451e.
---
 Tests/oss-fuzz/test_fuzzers.py | 2 --
 Tests/test_imagedraw.py        | 1 -
 Tests/test_pickle.py           | 2 --
 3 files changed, 5 deletions(-)

diff --git a/Tests/oss-fuzz/test_fuzzers.py b/Tests/oss-fuzz/test_fuzzers.py
index 68834045a..f54cb5069 100644
--- a/Tests/oss-fuzz/test_fuzzers.py
+++ b/Tests/oss-fuzz/test_fuzzers.py
@@ -7,7 +7,6 @@ import packaging
 import pytest
 
 from PIL import Image, features
-from Tests.helper import skip_unless_feature
 
 if sys.platform.startswith("win32"):
     pytest.skip("Fuzzer is linux only", allow_module_level=True)
@@ -50,7 +49,6 @@ def test_fuzz_images(path):
         fuzzers.disable_decompressionbomb_error()
 
 
-@skip_unless_feature("freetype2")
 @pytest.mark.parametrize(
     "path", subprocess.check_output("find Tests/fonts -type f", shell=True).split(b"\n")
 )
diff --git a/Tests/test_imagedraw.py b/Tests/test_imagedraw.py
index 379fe78cd..d3b3b3050 100644
--- a/Tests/test_imagedraw.py
+++ b/Tests/test_imagedraw.py
@@ -1340,7 +1340,6 @@ def test_stroke_multiline():
     assert_image_similar_tofile(im, "Tests/images/imagedraw_stroke_multiline.png", 3.3)
 
 
-@skip_unless_feature("freetype2")
 def test_setting_default_font():
     # Arrange
     im = Image.new("RGB", (100, 250))
diff --git a/Tests/test_pickle.py b/Tests/test_pickle.py
index eb687b57b..7fa07a9fb 100644
--- a/Tests/test_pickle.py
+++ b/Tests/test_pickle.py
@@ -113,7 +113,6 @@ def helper_assert_pickled_font_images(font1, font2):
     assert_image_equal(im1, im2)
 
 
-@skip_unless_feature("freetype2")
 @pytest.mark.parametrize("protocol", list(range(0, pickle.HIGHEST_PROTOCOL + 1)))
 def test_pickle_font_string(protocol):
     # Arrange
@@ -127,7 +126,6 @@ def test_pickle_font_string(protocol):
     helper_assert_pickled_font_images(font, unpickled_font)
 
 
-@skip_unless_feature("freetype2")
 @pytest.mark.parametrize("protocol", list(range(0, pickle.HIGHEST_PROTOCOL + 1)))
 def test_pickle_font_file(tmp_path, protocol):
     # Arrange
